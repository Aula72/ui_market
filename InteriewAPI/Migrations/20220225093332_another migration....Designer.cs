// <auto-generated />
using System;
using InterviewAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InteriewAPI.Migrations
{
    [DbContext(typeof(MarketDBContext))]
    [Migration("20220225093332_another migration...")]
    partial class anothermigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.1.22076.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InterviewAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("categoryName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int>("sellerId")
                        .HasColumnType("int");

                    b.Property<string>("units")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("InterviewAPI.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"), 1L, 1);

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("productPrice")
                        .HasColumnType("int");

                    b.Property<int>("productQuantity")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InterviewAPI.Models.Seller", b =>
                {
                    b.Property<int>("sellerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sellerID"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("sellerLocation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("sellerName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("sellerID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("InterviewAPI.Models.Category", b =>
                {
                    b.HasOne("InterviewAPI.Models.Product", null)
                        .WithMany("category")
                        .HasForeignKey("productId");
                });

            modelBuilder.Entity("InterviewAPI.Models.Seller", b =>
                {
                    b.HasOne("InterviewAPI.Models.Category", null)
                        .WithMany("seller")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("InterviewAPI.Models.Category", b =>
                {
                    b.Navigation("seller");
                });

            modelBuilder.Entity("InterviewAPI.Models.Product", b =>
                {
                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
